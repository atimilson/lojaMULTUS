{
  "swagger": "2.0",
  "info": {
    "description": "Pedido Externo",
    "version": "1.0.0",
    "title": "MCN Sistemas",
    "termsOfService": "http://www.apache.org/licenses/LICENSE-2.0.txt",
    "contact": {
      "name": "Telefone: (65)3054-4338",
      "email": "Email: desenvolvimento@mcnsistemas.com.br",
      "url": "https://www.mcnsistemas.com.br"
    },
    "license": {
      "name": "Apache License - Version 2.0, January 2004",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/api/autenticacao/autenticar/contratoagrupado": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Autenticar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AutenticacaoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenContratoAgrupadooDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          
        ]
      }
    },
    "/api/autenticacao/ping": {
      "get": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Teste Api Ativa",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Sem Api",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          
        ]
      }
    },
    "/api/autenticacao/autenticar": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Autenticar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutenticacaoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenAutenticacaoDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          
        ]
      }
    },
    "/api/cliente/vendedor": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Listar clientes por vendedor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Código da empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "vendedor",
            "description": "Código do vendedor",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClienteDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Incluir vendedor do cliente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClienteVendedorDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/cliente": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Incluir ou alterar cliente(s)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClienteDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Listar clientes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClienteDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cliente"
        ],
        "summary": "Excluir cliente ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/fichafinanceira": {
      "post": {
        "tags": [
          "Cliente | Ficha financeira"
        ],
        "summary": "Incluir ficha financeira",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FichaFinanceiraDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Cliente | Ficha financeira"
        ],
        "summary": "Listar ficha financeira ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tituloemaberto",
            "description": "informe 1 para títulos em aberto ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FichaFinanceiraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cliente | Ficha financeira"
        ],
        "summary": "Excluir ficha financeira ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código  da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/historicovenda": {
      "post": {
        "tags": [
          "Cliente | Histórico de venda"
        ],
        "summary": "Incluir histórico de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HistoricoVendaDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Cliente | Histórico de venda"
        ],
        "summary": "Listar histórico de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "pedido",
            "description": "informe o pedido",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HistoricoVendaDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cliente | Histórico de venda"
        ],
        "summary": "Excluir histórico de venda ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código  da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/condpgto/formapgto": {
      "get": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Listar forma de pagamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormaPgtoEcommerceDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/condpgto": {
      "post": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Incluir condição de pagamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CondicaoPagamentoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Listar condição de pagamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "condicao",
            "description": "código da condição de pagamento ou 0 para listar tudo",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CondicaoPagamentoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Excluir condição de pagamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "condicao",
            "description": "informe o código ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/condpgto/condpgtocliente": {
      "post": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Incluir condição de pagamento do cliente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CondicaoPagamentoClienteDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Listar condição de pagamento do cliente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CondicaoPagamentoClienteDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Condição de pagamento"
        ],
        "summary": "Excluir condição de pagamento do cliente",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cliente",
            "description": "informe o código do cliente ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/produto/grupo": {
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Listar grupo ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DescricaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/usuario/endereco": {
      "post": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Incluir endereço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceEnderecoIncluirDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Listar endereço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceEnderecoDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Excluir endereço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Alterar endereço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceEnderecoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/produto/marca": {
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Listar marca",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DescricaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/produto/subgrupo": {
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Listar subgrupo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DescricaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/usuario/alterarsenha": {
      "put": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Alterar senha",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceSenhaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/usuario": {
      "post": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Incluir usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Ler usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsuarioEcommerceDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/produto/categoria": {
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "Listar categoria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DescricaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/ecommerce/usuario/recuperar": {
      "get": {
        "tags": [
          "E-commerce"
        ],
        "summary": "recuperar senha do usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidoecommerce/baixadosim": {
      "put": {
        "tags": [
          "E-commerce | Pedido"
        ],
        "summary": "Mudar pedido para baixado no MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pedido",
            "description": "pedido",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidoecommerce/listar": {
      "get": {
        "tags": [
          "E-commerce | Pedido"
        ],
        "summary": "Listar pedido por período",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Código da empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pedido",
            "description": "informe o código do pedido ou 0 para todos",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_inicio",
            "description": "YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "data_fim",
            "description": "YYYY-MM-DD",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PedidoEcommerceLeituraDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidoecommerce/baixadonao": {
      "put": {
        "tags": [
          "E-commerce | Pedido"
        ],
        "summary": "Mudar pedido para não baixado no MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pedido",
            "description": "pedido",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidoecommerce": {
      "post": {
        "tags": [
          "E-commerce | Pedido"
        ],
        "summary": "Incluir pedido",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoEcommerceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RetornoPedido"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-commerce | Pedido"
        ],
        "summary": "Listar pedido não baixado para o MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Código da empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedidoEcommerceLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/email": {
      "post": {
        "tags": [
          "E-mail"
        ],
        "summary": "Enviar e-mail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa/redesocial": {
      "post": {
        "tags": [
          "Empresa"
        ],
        "summary": "Incluir rede social",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedeSocialDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Empresa"
        ],
        "summary": "Listar rede social",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RedeSocialDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa/contratos": {
      "get": {
        "tags": [
          "Empresa"
        ],
        "summary": "Listar contratos",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContratoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa/contratos/agrupados": {
      "get": {
        "tags": [
          "Empresa"
        ],
        "summary": "Listar contratos agrupados",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContratoAgrupadoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Empresa"
        ],
        "summary": "Incluir contrato agrupado",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContratoAgrupadoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa": {
      "get": {
        "tags": [
          "Empresa"
        ],
        "summary": "Listar empresas",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmpresaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Empresa"
        ],
        "summary": "Incluir empresa",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmpresaDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa/banner": {
      "post": {
        "tags": [
          "Empresa"
        ],
        "summary": "Incluir banner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmpresaBannerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Empresa"
        ],
        "summary": "Listar banners",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BannerDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/empresa/relatorio": {
      "post": {
        "tags": [
          "Empresa"
        ],
        "summary": "Incluir layout de relatório",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelatorioDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/parametro/parametro": {
      "get": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Ler parametro",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "parametro",
            "description": "Parametro",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ParametroDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/parametro": {
      "post": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Incluir",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParametroDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Listar parametros",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ParametroDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Excluir",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/parametro/permissao": {
      "post": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Incluir",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermissaoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Ler permissões do usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "codigo",
            "description": "informe o código da permissão ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "usuario",
            "description": "usuario",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ParametroDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Empresa | Parametro | Permissão"
        ],
        "summary": "Excluir",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/listacasamento/saldo": {
      "delete": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Excluir saldo do produto da lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "idlista",
            "description": "idlista",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Saldo da lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "idlista",
            "description": "idlista",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListaCasamentoSaldoLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Incluir saldo da lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListaCasamentoSaldoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/listacasamento/valida": {
      "get": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Relação de Lista de casamento válida",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListaCasamentoValidaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/listacasamento": {
      "post": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Incluir lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListaCasamentoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Excluir de lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "idlista",
            "description": "idlista",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Lista de casamento"
        ],
        "summary": "Lista de casamento",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "idlista",
            "description": "idlista",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListaCasamentoLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile/pdf/orcamento": {
      "post": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Retorna arquivo PDF do orçamento mobile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoMobilePDFDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PedidoBase64Dto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile/baixadonao": {
      "put": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Mudar pedido para não baixado no MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pedido",
            "description": "pedido",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile/pdf/pedido": {
      "post": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Retorna arquivo PDF do pedido mobile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoMobilePDFDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PedidoBase64Dto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile": {
      "post": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Incluir pedido de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PedidoDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RetornoPedido"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Listar pedido externo não baixado para o MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Código da empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedidoLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile/listar": {
      "get": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Listar pedido mobile por período",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Código da empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pedido",
            "description": "informe o código do pedido ou 0 para todos",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_inicio",
            "description": "YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "data_fim",
            "description": "YYYY-MM-DD",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedidoLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/pedidomobile/baixadosim": {
      "put": {
        "tags": [
          "Pedido | Mobile Externo"
        ],
        "summary": "Mudar pedido para baixado no MCN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pedido",
            "description": "pedido",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/foto": {
      "post": {
        "tags": [
          "Produto"
        ],
        "summary": "Incluir foto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoFotoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/marca": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar marca",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoMarcaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/ecommerce": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar produtos e-commerce",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "busca",
            "description": "buscar por código ou descrição do produto",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "categoria",
            "description": "código da categoria",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "grupo",
            "description": "código do grupo",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "subgrupo",
            "description": "código do subgrupo",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "marca",
            "description": "código da marca",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "destaque",
            "description": "informe S para listar somente os produtos para destacar no site",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutosEcommerceDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/grupo": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar grupo ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoGrupoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/ecommerce/novos": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar novos cadastros de produtos e-commerce",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutosEcommerceDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/conversao": {
      "post": {
        "tags": [
          "Produto"
        ],
        "summary": "Incluir conversão de unidade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoConversaoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar conversão de unidade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoConversaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto"
        ],
        "summary": "Excluir conversão de unidade",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto": {
      "post": {
        "tags": [
          "Produto"
        ],
        "summary": "Incluir",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar produtos",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto"
        ],
        "summary": "Excluir produto ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/composto": {
      "post": {
        "tags": [
          "Produto"
        ],
        "summary": "Incluir produto composto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoCompostoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar produto composto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoCompostoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto"
        ],
        "summary": "Excluir produto composto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/categoria": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar categoria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoCategoriaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/produto/subgrupo": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Listar subgrupo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoSubGrupoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/estoque": {
      "post": {
        "tags": [
          "Produto | Estoque"
        ],
        "summary": "Incluir Estoque",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EstoqueDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto | Estoque"
        ],
        "summary": "Listar estoque",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "Empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "Produto",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EstoqueDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Estoque"
        ],
        "summary": "Excluir estoque ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/preco": {
      "post": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Incluir preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoPrecoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Listar preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tabela",
            "description": "informe o código da tabela ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoPrecoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Excluir preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/preco/tabelapreco": {
      "post": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Incluir tabela de preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoTabPrecoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Listar tabela de preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tabela",
            "description": "informe o código da tabela ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoTabPrecoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Preço"
        ],
        "summary": "Excluir tabela de preço",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tabela",
            "description": "informe o código da tabela ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/promocao": {
      "post": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Incluir promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromocaoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Listar produtos em promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "promocao",
            "description": "informe o código da promoção ou 0 para todos",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "tipo_promocao",
            "description": "mobile=1|ecommerce=2",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutoEmPromocaoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Excluir promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "promocao",
            "description": "informe o código da promoção ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/promocao/condpgto": {
      "post": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Incluir condição de pagamento da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromocaoCondPgtoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Excluir condição de pagamento da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "promocao",
            "description": "informe o código da promoção ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/promocao/produto": {
      "post": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Incluir produtos da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromocaoProdutoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Excluir produtos da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "promocao",
            "description": "informe o código da promoção ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/promocao/empresa": {
      "post": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Incluir empresas da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromocaoEmpresaDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Excluir empresas da promoção",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "promocao",
            "description": "informe o código da promoção ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/promocao/ecommerce": {
      "get": {
        "tags": [
          "Produto | Promoção"
        ],
        "summary": "Listar produtos em promoção do E-commerce",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "empresa",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProdutosEmPromocaoEcommerceDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/sugestao/venda/doproduto": {
      "get": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Listar sugestao de venda do produto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "produto",
            "description": "informe o código do produto ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaProdutoLeituraDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/sugestao/venda": {
      "post": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Incluir sugestao de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Exclusão completa da sugestao de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Listar cadastro de sugestao de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/sugestao/venda/produto": {
      "post": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Incluir produto da sugestao de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaProdutoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Listar cadastro dos produtos de sugestao de venda ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaProdutoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/sugestao/venda/subgrupo": {
      "post": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Incluir grupo e subgrupo da sugestao de venda",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaSubGrupoDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Sugestão de venda"
        ],
        "summary": "Listar cadastro de subgrupo de sugestao de venda ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "data_alteracao",
            "description": "YYYY-MM-DD hh:mm:ss se vazio irá listar todos, se preenchido irá listar os alterados a partir da data e hora",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SugestaoVendaSubGrupoDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/transportadora": {
      "post": {
        "tags": [
          "Transportadora"
        ],
        "summary": "Incluir transportadora",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportadoraCadDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Transportadora"
        ],
        "summary": "Listar transportadora por contrato",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportadoraDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Transportadora"
        ],
        "summary": "Excluir transportadora",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "transportadora",
            "description": "informe o código da transportadora ou 0 para todas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/usuario": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Incluir usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UsuarioDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Buscar por usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "contrato",
            "description": "contrato",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "usuario",
            "description": "Usuário",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsuarioDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "summary": "Excluir usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "usuario",
            "description": "usuario",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/usuario/ecommerce": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Listar usuário e-commerce",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UsuarioSuporteDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/usuario/ativar": {
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Ativar usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "usuario",
            "description": "usuario",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "304": {
            "description": "Não modificado"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/usuario/desativar": {
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Desativar usuário",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "usuario",
            "description": "usuario",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Processado com sucesso"
          },
          "304": {
            "description": "Não modificado"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/usuario/empresas": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Listar empresas que o usuário tem acesso",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "usuario",
            "description": "usuário",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsuarioEmpresasDto"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    },
    "/api/vendedor/meta": {
      "post": {
        "tags": [
          "Vendedor"
        ],
        "summary": "Incluir meta",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "corpo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendedorMetaDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Vendedor"
        ],
        "summary": "Listar meta do vendedor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "empresa",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "vendedor",
            "description": "vendedor",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "mesano",
            "description": "exemplo 032024 ou 0 para todas as metas",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendedorMetaDto"
              }
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "404": {
            "description": "Dados não encontrado",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Vendedor"
        ],
        "summary": "Excluir meta do vendedor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "empresa",
            "description": "informe o código da empresa ou 0 para todas",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "vendedor",
            "description": "informe o código do vendedor ou 0 para todos",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "304": {
            "description": "Dados não modificados.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "400": {
            "description": "Requisição com formato inválido.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          },
          "401": {
            "description": "Credenciais inválidas.",
            "schema": {
              "$ref": "#/definitions/ResponseError"
            }
          }
        },
        "security": [
          {
            "Bearer": [
              
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "AutenticacaoDto": {
      "type": "object",
      "description": "AutenticacaoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Usuario": {
          "type": "string"
        },
        "Senha": {
          "type": "string"
        }
      }
    },
    "BannerDto": {
      "type": "object",
      "description": "BannerDto",
      "properties": {
        "Tipo": {
          "type": "string"
        },
        "Texto": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "Link": {
          "type": "string"
        }
      }
    },
    "ClienteDto": {
      "type": "object",
      "description": "ClienteDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "IdUsuario": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "RazaoSocial": {
          "type": "string"
        },
        "Fantasia": {
          "type": "string"
        },
        "TipoPessoa": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "LimiteCredito": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "PercDesconto": {
          "type": "number"
        },
        "CodTabPreco": {
          "type": "integer"
        },
        "Endereco": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "IBGE": {
          "type": "integer"
        },
        "CodBairro": {
          "type": "integer"
        },
        "NomeBairro": {
          "type": "string"
        },
        "CodCidade": {
          "type": "integer"
        },
        "NomeCidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "Fone3": {
          "type": "string"
        },
        "Fone4": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Alteracao": {
          "type": "string"
        }
      }
    },
    "ClienteVendedorDto": {
      "type": "object",
      "description": "ClienteVendedorDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "Vendedor": {
          "type": "integer"
        }
      }
    },
    "CondicaoPagamentoClienteDto": {
      "type": "object",
      "description": "CondicaoPagamentoClienteDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "CondPgto": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        }
      }
    },
    "CondicaoPagamentoDto": {
      "type": "object",
      "description": "CondicaoPagamentoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "CondPgto": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Descricao": {
          "type": "string"
        },
        "QtdeParcelas": {
          "type": "integer"
        },
        "IntervaloPrimeiraParcela": {
          "type": "integer"
        },
        "IntervaloDemaisParcelas": {
          "type": "integer"
        },
        "ValorMinimoParcela": {
          "type": "number"
        },
        "PercMaxDesconto": {
          "type": "number"
        },
        "PercAcrescimo": {
          "type": "number"
        },
        "CalcJuroComposto": {
          "type": "boolean"
        },
        "FormaPgto": {
          "type": "integer"
        },
        "DescFormaPgto": {
          "type": "string"
        },
        "TipoFormaPgto": {
          "type": "integer"
        },
        "Ecommerce": {
          "type": "boolean"
        }
      }
    },
    "ContratoAgrupadoDto": {
      "type": "object",
      "description": "ContratoAgrupadoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "ContratoAgrupado": {
          "type": "integer"
        }
      }
    },
    "ContratoDto": {
      "type": "object",
      "description": "ContratoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "CNPJ": {
          "type": "string"
        },
        "RazaoSocial": {
          "type": "string"
        }
      }
    },
    "DescricaoDto": {
      "type": "object",
      "description": "DescricaoDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "EmailDto": {
      "type": "object",
      "description": "EmailDto",
      "properties": {
        "Para": {
          "type": "string"
        },
        "Assunto": {
          "type": "string"
        },
        "Conteudo": {
          "type": "string"
        },
        "Anexo": {
          "type": "string"
        }
      }
    },
    "EmpresaBannerDto": {
      "type": "object",
      "description": "EmpresaBannerDto",
      "properties": {
        "ChaveS3": {
          "type": "string"
        },
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Tipo": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "Link": {
          "type": "string"
        },
        "Texto": {
          "type": "string"
        }
      }
    },
    "EmpresaDto": {
      "type": "object",
      "description": "EmpresaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "CNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "RazaoSocial": {
          "type": "string"
        },
        "Fantasia": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "CodIBGE": {
          "type": "integer"
        },
        "Endereco": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CodClienteConsumidor": {
          "type": "integer"
        },
        "LogoMarca": {
          "type": "string"
        }
      }
    },
    "EstoqueDto": {
      "type": "object",
      "description": "EstoqueDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Qtde": {
          "type": "number"
        }
      }
    },
    "FichaFinanceiraDto": {
      "type": "object",
      "description": "FichaFinanceiraDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Tipo": {
          "type": "string"
        },
        "NrLancamento": {
          "type": "integer"
        },
        "Parcela": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "Titulo": {
          "type": "string"
        },
        "Emissao": {
          "type": "string"
        },
        "Vencimento": {
          "type": "string"
        },
        "ValorDoc": {
          "type": "number"
        },
        "ValorReceber": {
          "type": "number"
        },
        "Quitado": {
          "type": "boolean"
        }
      }
    },
    "FormaPgtoEcommerceDto": {
      "type": "object",
      "description": "FormaPgtoEcommerceDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Tipo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "HistoricoVendaDto": {
      "type": "object",
      "description": "HistoricoVendaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Pedido": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Cliente": {
          "type": "integer"
        },
        "NomeCliente": {
          "type": "string"
        },
        "Vendedor": {
          "type": "integer"
        },
        "Emissao": {
          "type": "string"
        },
        "ValorProduto": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorOutrasDespesas": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "ValorTotalPedido": {
          "type": "number"
        },
        "Produtos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricoVendaItensDto"
          }
        }
      }
    },
    "HistoricoVendaItensDto": {
      "type": "object",
      "description": "HistoricoVendaItensDto",
      "properties": {
        "Item": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "DescricaoProduto": {
          "type": "string"
        },
        "Qtde": {
          "type": "number"
        },
        "ValorUnitario": {
          "type": "number"
        },
        "ValorTotal": {
          "type": "number"
        }
      }
    },
    "ListaCasamentoDto": {
      "type": "object",
      "description": "ListaCasamentoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "IdLista": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Cliente": {
          "type": "integer"
        },
        "DataInicial": {
          "type": "string",
          "format": "date"
        },
        "DataFinal": {
          "type": "string",
          "format": "date"
        },
        "Ativo": {
          "type": "boolean"
        }
      }
    },
    "ListaCasamentoLeituraDto": {
      "type": "object",
      "description": "ListaCasamentoLeituraDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "IdLista": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Cliente": {
          "type": "integer"
        },
        "DataInicial": {
          "type": "string"
        },
        "DataFinal": {
          "type": "string"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListaCasamentoSaldoLeituraDto"
          }
        }
      }
    },
    "ListaCasamentoSaldoDto": {
      "type": "object",
      "description": "ListaCasamentoSaldoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "IdLista": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Saldo": {
          "type": "number"
        }
      }
    },
    "ListaCasamentoSaldoLeituraDto": {
      "type": "object",
      "description": "ListaCasamentoSaldoLeituraDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Saldo": {
          "type": "number"
        }
      }
    },
    "ListaCasamentoValidaDto": {
      "type": "object",
      "description": "ListaCasamentoValidaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "IdLista": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Cliente": {
          "type": "integer"
        }
      }
    },
    "PagamentoEcommerce": {
      "type": "object",
      "description": "PagamentoEcommerce",
      "properties": {
        "QtdeParcela": {
          "type": "integer"
        },
        "Valor": {
          "type": "number"
        },
        "CodCartao": {
          "type": "integer"
        },
        "BandeiraCartao": {
          "type": "string"
        },
        "NrAutorizacao": {
          "type": "string"
        },
        "NSU": {
          "type": "string"
        },
        "TXID": {
          "type": "string"
        },
        "endToEndID": {
          "type": "string"
        }
      }
    },
    "ParametroDto": {
      "type": "object",
      "description": "ParametroDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Parametro": {
          "type": "string"
        },
        "Conteudo": {
          "type": "string"
        }
      }
    },
    "PedidoBase64Dto": {
      "type": "object",
      "description": "PedidoBase64Dto",
      "properties": {
        "ArquivoBase64": {
          "type": "string"
        }
      }
    },
    "PedidoDto": {
      "type": "object",
      "description": "PedidoDto",
      "properties": {
        "Pedido": {
          "type": "integer"
        },
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "DataEmissao": {
          "type": "string"
        },
        "HoraEmissao": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "CondPgto": {
          "type": "integer"
        },
        "IdUsuario": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "ClienteNome": {
          "type": "string"
        },
        "ClienteFantasia": {
          "type": "string"
        },
        "ValorProdutos": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorPedido": {
          "type": "number"
        },
        "Vendedor": {
          "type": "integer"
        },
        "VendedorNome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "EnderecoNumero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "Fone3": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "InscEstadual": {
          "type": "string"
        },
        "IBGE": {
          "type": "integer"
        },
        "TabPrecoCliente": {
          "type": "integer"
        },
        "Observacao": {
          "type": "string"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoItemDto"
          }
        }
      }
    },
    "PedidoEcommerceDto": {
      "type": "object",
      "description": "PedidoEcommerceDto",
      "properties": {
        "Empresa": {
          "type": "integer"
        },
        "DataEmissao": {
          "type": "string"
        },
        "ValorProdutos": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "OutrasDespesas": {
          "type": "number"
        },
        "ValorPedido": {
          "type": "number"
        },
        "ClienteNome": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "Fone": {
          "type": "string"
        },
        "DataPrevEntrega": {
          "type": "string"
        },
        "TipoFrete": {
          "type": "integer"
        },
        "CodTransportador": {
          "type": "integer"
        },
        "NomeTransportador": {
          "type": "string"
        },
        "Endereco": {
          "allOf": [
            {
              "$ref": "#/definitions/UsuarioEcommerceEnderecoIncluirDto"
            }
          ]
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoEcommerceItemDto"
          }
        },
        "Pagamento": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PagamentoEcommerce"
          }
        }
      }
    },
    "PedidoEcommerceItemDto": {
      "type": "object",
      "description": "PedidoEcommerceItemDto",
      "properties": {
        "Item": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Quantidade": {
          "type": "number"
        },
        "Unidade": {
          "type": "string"
        },
        "ValorUnitario": {
          "type": "number"
        },
        "IdListaCasamento": {
          "type": "integer"
        }
      }
    },
    "PedidoEcommerceLeituraDto": {
      "type": "object",
      "description": "PedidoEcommerceLeituraDto",
      "properties": {
        "Pedido": {
          "type": "integer"
        },
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Baixado": {
          "type": "boolean"
        },
        "DataEmissao": {
          "type": "string"
        },
        "DataAprovacao": {
          "type": "string"
        },
        "DataAlteracao": {
          "type": "string"
        },
        "ValorProdutos": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "OutrasDespesas": {
          "type": "number"
        },
        "ValorPedido": {
          "type": "number"
        },
        "ClienteNome": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "EnderecoNome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "EnderecoNumero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone": {
          "type": "string"
        },
        "DataPrevEntrega": {
          "type": "string"
        },
        "TipoFrete": {
          "type": "integer"
        },
        "CodTransportador": {
          "type": "integer"
        },
        "NomeTransportador": {
          "type": "string"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoEcommerceItemDto"
          }
        },
        "Pagamento": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PagamentoEcommerce"
          }
        }
      }
    },
    "PedidoItemDto": {
      "type": "object",
      "description": "PedidoItemDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Quantidade": {
          "type": "number"
        },
        "Unidade": {
          "type": "string"
        },
        "ConversaoUnidade": {
          "type": "string"
        },
        "ValorUnitarioBruto": {
          "type": "number"
        },
        "ValorDescontoItem": {
          "type": "number"
        },
        "PercDescontoItem": {
          "type": "number"
        },
        "ValorDescEspecial": {
          "type": "number"
        },
        "ValorUnitarioLiquido": {
          "type": "number"
        },
        "ValorTotalLiquido": {
          "type": "number"
        },
        "Complemento": {
          "type": "string"
        },
        "TabPreco": {
          "type": "integer"
        },
        "PrecoOriginal": {
          "type": "number"
        }
      }
    },
    "PedidoItemLeituraDto": {
      "type": "object",
      "description": "PedidoItemLeituraDto",
      "properties": {
        "Item": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Quantidade": {
          "type": "number"
        },
        "Unidade": {
          "type": "string"
        },
        "ConversaoUnidade": {
          "type": "string"
        },
        "ValorUnitarioBruto": {
          "type": "number"
        },
        "ValorDescontoItem": {
          "type": "number"
        },
        "PercDescontoItem": {
          "type": "number"
        },
        "ValorDescEspecial": {
          "type": "number"
        },
        "ValorUnitarioLiquido": {
          "type": "number"
        },
        "ValorTotalLiquido": {
          "type": "number"
        },
        "Complemento": {
          "type": "string"
        },
        "TabPreco": {
          "type": "integer"
        },
        "PrecoOriginal": {
          "type": "number"
        }
      }
    },
    "PedidoLeituraDto": {
      "type": "object",
      "description": "PedidoLeituraDto",
      "properties": {
        "Pedido": {
          "type": "integer"
        },
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Baixado": {
          "type": "boolean"
        },
        "DataEmissao": {
          "type": "string"
        },
        "HoraEmissao": {
          "type": "string"
        },
        "Tipo": {
          "type": "string"
        },
        "CondPgto": {
          "type": "integer"
        },
        "IdUsuario": {
          "type": "integer"
        },
        "Cliente": {
          "type": "integer"
        },
        "ClienteNome": {
          "type": "string"
        },
        "ClienteFantasia": {
          "type": "string"
        },
        "ValorProdutos": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorPedido": {
          "type": "number"
        },
        "Vendedor": {
          "type": "integer"
        },
        "VendedorNome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "EnderecoNumero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "Fone3": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "InscEstadual": {
          "type": "string"
        },
        "IBGE": {
          "type": "integer"
        },
        "TabPrecoCliente": {
          "type": "integer"
        },
        "Observacao": {
          "type": "string"
        },
        "DataTransmissao": {
          "type": "string"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoItemLeituraDto"
          }
        }
      }
    },
    "PedidoMobilePDFDto": {
      "type": "object",
      "description": "PedidoMobilePDFDto",
      "properties": {
        "Pedido": {
          "type": "integer"
        },
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "DataEmissao": {
          "type": "string"
        },
        "HoraEmissao": {
          "type": "string"
        },
        "CondPgto": {
          "type": "integer"
        },
        "CondPgtoDesc": {
          "type": "string"
        },
        "ClienteNome": {
          "type": "string"
        },
        "ClienteFantasia": {
          "type": "string"
        },
        "ValorProdutos": {
          "type": "number"
        },
        "ValorFrete": {
          "type": "number"
        },
        "ValorDesconto": {
          "type": "number"
        },
        "ValorPedido": {
          "type": "number"
        },
        "Vendedor": {
          "type": "integer"
        },
        "VendedorNome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "EnderecoNumero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "Fone3": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "InscEstadual": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PedidoMobilePDFItemDto"
          }
        }
      }
    },
    "PedidoMobilePDFItemDto": {
      "type": "object",
      "description": "PedidoMobilePDFItemDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Quantidade": {
          "type": "number"
        },
        "Unidade": {
          "type": "string"
        },
        "ValorUnitarioBruto": {
          "type": "number"
        },
        "ValorDescontoItem": {
          "type": "number"
        },
        "ValorTotalLiquido": {
          "type": "number"
        },
        "Complemento": {
          "type": "string"
        }
      }
    },
    "PermissaoDto": {
      "type": "object",
      "description": "PermissaoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Codigo": {
          "type": "integer"
        },
        "Usuario": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "Permitido": {
          "type": "boolean"
        }
      }
    },
    "ProdFotoDto": {
      "type": "object",
      "description": "ProdFotoDto",
      "properties": {
        "Seq": {
          "type": "integer"
        },
        "URL": {
          "type": "string"
        }
      }
    },
    "ProdutoCategoriaDto": {
      "type": "object",
      "description": "ProdutoCategoriaDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ProdutoCompostoDto": {
      "type": "object",
      "description": "ProdutoCompostoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "ProdutoComposto": {
          "type": "integer"
        },
        "Qtde": {
          "type": "number"
        },
        "QtdeUnit": {
          "type": "number"
        },
        "EstoqueKit": {
          "type": "string"
        }
      }
    },
    "ProdutoConversaoDto": {
      "type": "object",
      "description": "ProdutoConversaoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "UnidConvertida": {
          "type": "string"
        },
        "Descricao": {
          "type": "string"
        },
        "QtdeEmbalagem": {
          "type": "number"
        },
        "QtdeMinima": {
          "type": "number"
        },
        "PercReducaoPreco": {
          "type": "number"
        },
        "DescontoMaximo": {
          "type": "number"
        },
        "TabPreco": {
          "type": "integer"
        }
      }
    },
    "ProdutoDaPromocaoDto": {
      "type": "object",
      "description": "ProdutoDaPromocaoDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "PrecoNormal": {
          "type": "number"
        },
        "PrecoPromocional": {
          "type": "number"
        },
        "QtdeMinima": {
          "type": "number"
        },
        "QtdeMaxima": {
          "type": "number"
        },
        "Complemento": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Unidade": {
          "type": "string"
        },
        "CodMarca": {
          "type": "integer"
        },
        "DescMarca": {
          "type": "string"
        },
        "CodCategoria": {
          "type": "integer"
        },
        "DescCategoria": {
          "type": "string"
        },
        "CodGrupo": {
          "type": "integer"
        },
        "DescGrupo": {
          "type": "string"
        },
        "CodSubGrupo": {
          "type": "integer"
        },
        "DescSubGrupo": {
          "type": "string"
        },
        "Cor": {
          "type": "string"
        },
        "Largua": {
          "type": "number"
        },
        "Espessura": {
          "type": "number"
        },
        "Comprimento": {
          "type": "number"
        },
        "TotalM3": {
          "type": "number"
        },
        "Volume": {
          "type": "string"
        },
        "Peso": {
          "type": "number"
        },
        "CodBarras": {
          "type": "string"
        },
        "NCM": {
          "type": "string"
        },
        "CEST": {
          "type": "string"
        },
        "Multiplicidade": {
          "type": "number"
        },
        "CEANFiscal": {
          "type": "string"
        },
        "Foto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProdFotoDto"
          }
        }
      }
    },
    "ProdutoDto": {
      "type": "object",
      "description": "ProdutoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Descricao": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Unidade": {
          "type": "string"
        },
        "CodMarca": {
          "type": "integer"
        },
        "DescMarca": {
          "type": "string"
        },
        "CodCategoria": {
          "type": "integer"
        },
        "DescCategoria": {
          "type": "string"
        },
        "CodGrupo": {
          "type": "integer"
        },
        "DescGrupo": {
          "type": "string"
        },
        "CodSubGrupo": {
          "type": "integer"
        },
        "DescSubGrupo": {
          "type": "string"
        },
        "Cor": {
          "type": "string"
        },
        "Largua": {
          "type": "number"
        },
        "Espessura": {
          "type": "number"
        },
        "Comprimento": {
          "type": "number"
        },
        "TotalM3": {
          "type": "number"
        },
        "Volume": {
          "type": "string"
        },
        "Peso": {
          "type": "number"
        },
        "CodBarras": {
          "type": "string"
        },
        "NCM": {
          "type": "string"
        },
        "CEST": {
          "type": "string"
        },
        "Multiplicidade": {
          "type": "number"
        },
        "Ecommerce": {
          "type": "boolean"
        },
        "Destaque": {
          "type": "boolean"
        },
        "CEANFiscal": {
          "type": "string"
        },
        "CodRef": {
          "type": "string"
        },
        "KitComposto": {
          "type": "boolean"
        },
        "Imagens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProdutoImagemDto"
          }
        },
        "KitprodcompPercvalor": {
          "type": "number"
        },
        "KitprodcompTpoperc": {
          "type": "string"
        },
        "KitprodcompQtde": {
          "type": "number"
        },
        "Alteracao": {
          "type": "string"
        },
        "DataCadastro": {
          "type": "string"
        }
      }
    },
    "ProdutoEmPromocaoDto": {
      "type": "object",
      "description": "ProdutoEmPromocaoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Promocao": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Inicio": {
          "type": "string",
          "format": "date"
        },
        "Fim": {
          "type": "string",
          "format": "date"
        },
        "CondPgto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromocaoCondPagamentoDto"
          }
        },
        "Produtos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProdutoDaPromocaoDto"
          }
        }
      }
    },
    "ProdutoFotoDto": {
      "type": "object",
      "description": "ProdutoFotoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Seq": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "URL": {
          "type": "string"
        }
      }
    },
    "ProdutoGrupoDto": {
      "type": "object",
      "description": "ProdutoGrupoDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ProdutoImagemDto": {
      "type": "object",
      "description": "ProdutoImagemDto",
      "properties": {
        "URL": {
          "type": "string"
        }
      }
    },
    "ProdutoMarcaDto": {
      "type": "object",
      "description": "ProdutoMarcaDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ProdutoPrecoDto": {
      "type": "object",
      "description": "ProdutoPrecoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "TabPreco": {
          "type": "integer"
        },
        "Preco": {
          "type": "number"
        },
        "PercDesconto": {
          "type": "number"
        },
        "PercComissao": {
          "type": "number"
        }
      }
    },
    "ProdutoSubGrupoDto": {
      "type": "object",
      "description": "ProdutoSubGrupoDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ProdutoTabPrecoDto": {
      "type": "object",
      "description": "ProdutoTabPrecoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "TabPreco": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "ProdutosEcommerceDto": {
      "type": "object",
      "description": "ProdutosEcommerceDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Preco": {
          "type": "number"
        },
        "PrecoPromocional": {
          "type": "number"
        },
        "Descricao": {
          "type": "string"
        },
        "Estoque": {
          "type": "number"
        },
        "Categoria": {
          "type": "string"
        },
        "Marca": {
          "type": "string"
        },
        "Grupo": {
          "type": "string"
        },
        "SubGrupo": {
          "type": "string"
        },
        "DescEcommerce": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Cor": {
          "type": "string"
        },
        "Largua": {
          "type": "number"
        },
        "Espessura": {
          "type": "number"
        },
        "Comprimento": {
          "type": "number"
        },
        "TotalM3": {
          "type": "number"
        },
        "Volume": {
          "type": "string"
        },
        "Peso": {
          "type": "number"
        },
        "Imagens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProdutoImagemDto"
          }
        }
      }
    },
    "ProdutosEmPromocaoEcommerceDto": {
      "type": "object",
      "description": "ProdutosEmPromocaoEcommerceDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "PrecoNormal": {
          "type": "number"
        },
        "PrecoPromocional": {
          "type": "number"
        },
        "Descricao": {
          "type": "string"
        },
        "DescCategoria": {
          "type": "string"
        },
        "Marca": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Observacao": {
          "type": "string"
        },
        "Imagens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProdutoImagemDto"
          }
        }
      }
    },
    "PromocaoCondPagamentoDto": {
      "type": "object",
      "description": "PromocaoCondPagamentoDto",
      "properties": {
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "PromocaoCondPgtoDto": {
      "type": "object",
      "description": "PromocaoCondPgtoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Promocao": {
          "type": "integer"
        },
        "CondPgto": {
          "type": "integer"
        }
      }
    },
    "PromocaoDto": {
      "type": "object",
      "description": "PromocaoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Promocao": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Inicio": {
          "type": "string",
          "format": "date"
        },
        "Fim": {
          "type": "string",
          "format": "date"
        },
        "TipoPromocao": {
          "type": "integer"
        },
        "Decricao": {
          "type": "string"
        }
      }
    },
    "PromocaoEmpresaDto": {
      "type": "object",
      "description": "PromocaoEmpresaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Promocao": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        }
      }
    },
    "PromocaoProdutoDto": {
      "type": "object",
      "description": "PromocaoProdutoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Promocao": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "PrecoNormal": {
          "type": "number"
        },
        "PrecoPromocional": {
          "type": "number"
        },
        "QtdeMinima": {
          "type": "number"
        },
        "QtdeMaxima": {
          "type": "number"
        }
      }
    },
    "RedeSocialDto": {
      "type": "object",
      "description": "RedeSocialDto",
      "properties": {
        "Empresa": {
          "type": "integer"
        },
        "RedeSocial": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        }
      }
    },
    "RelatorioDto": {
      "type": "object",
      "description": "RelatorioDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Codigo": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        },
        "Layout": {
          "type": "string"
        }
      }
    },
    "ResponseError": {
      "type": "object",
      "description": "ResponseError",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "RetornoPedido": {
      "type": "object",
      "description": "RetornoPedido",
      "properties": {
        "Pedido": {
          "type": "integer"
        }
      }
    },
    "SugestaoVendaDto": {
      "type": "object",
      "description": "SugestaoVendaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "CodSugestao": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SugestaoVendaProdutoDto": {
      "type": "object",
      "description": "SugestaoVendaProdutoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "CodSugestao": {
          "type": "integer"
        },
        "Produto": {
          "type": "integer"
        }
      }
    },
    "SugestaoVendaProdutoLeituraDto": {
      "type": "object",
      "description": "SugestaoVendaProdutoLeituraDto",
      "properties": {
        "Produto": {
          "type": "integer"
        },
        "Descricao": {
          "type": "string"
        }
      }
    },
    "SugestaoVendaSubGrupoDto": {
      "type": "object",
      "description": "SugestaoVendaSubGrupoDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "CodSugestao": {
          "type": "integer"
        },
        "Grupo": {
          "type": "integer"
        },
        "SubGrupo": {
          "type": "integer"
        }
      }
    },
    "TokenAutenticacaoDto": {
      "type": "object",
      "description": "TokenAutenticacaoDto",
      "properties": {
        "Token": {
          "type": "string"
        }
      }
    },
    "TokenContratoAgrupadooDto": {
      "type": "object",
      "description": "TokenContratoAgrupadooDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Usuario": {
          "type": "string"
        },
        "Token": {
          "type": "string"
        }
      }
    },
    "TransportadoraCadDto": {
      "type": "object",
      "description": "TransportadoraCadDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Transportadora": {
          "type": "integer"
        }
      }
    },
    "TransportadoraDto": {
      "type": "object",
      "description": "TransportadoraDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Transportadora": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "RazaoSocial": {
          "type": "string"
        },
        "Fantasia": {
          "type": "string"
        },
        "TipoPessoa": {
          "type": "string"
        },
        "CPF": {
          "type": "string"
        },
        "CNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "Fone1": {
          "type": "string"
        },
        "Fone2": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "UsuarioDto": {
      "type": "object",
      "description": "UsuarioDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Usuario": {
          "type": "string"
        },
        "Senha": {
          "type": "string"
        },
        "permissao": {
          "type": "integer"
        },
        "CPF": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Nome": {
          "type": "string"
        },
        "Fone": {
          "type": "string"
        },
        "Vendedor": {
          "type": "integer"
        },
        "Percdesmax": {
          "type": "number"
        },
        "DispositivoAlteracao": {
          "type": "string"
        }
      }
    },
    "UsuarioEcommerceDto": {
      "type": "object",
      "description": "UsuarioEcommerceDto",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Senha": {
          "type": "string"
        },
        "CPFouCNPJ": {
          "type": "string"
        },
        "IE": {
          "type": "string"
        },
        "Fone": {
          "type": "string"
        },
        "DataNascimento": {
          "type": "string"
        }
      }
    },
    "UsuarioEcommerceEnderecoDto": {
      "type": "object",
      "description": "UsuarioEcommerceEnderecoDto",
      "properties": {
        "Id": {
          "type": "integer"
        },
        "Nome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        }
      }
    },
    "UsuarioEcommerceEnderecoIncluirDto": {
      "type": "object",
      "description": "UsuarioEcommerceEnderecoIncluirDto",
      "properties": {
        "Nome": {
          "type": "string"
        },
        "Endereco": {
          "type": "string"
        },
        "Numero": {
          "type": "string"
        },
        "Complemento": {
          "type": "string"
        },
        "Bairro": {
          "type": "string"
        },
        "Cidade": {
          "type": "string"
        },
        "UF": {
          "type": "string"
        },
        "CEP": {
          "type": "string"
        }
      }
    },
    "UsuarioEcommerceSenhaDto": {
      "type": "object",
      "description": "UsuarioEcommerceSenhaDto",
      "properties": {
        "SenhaAtual": {
          "type": "string"
        },
        "SenhaNova": {
          "type": "string"
        }
      }
    },
    "UsuarioEmpresasDto": {
      "type": "object",
      "description": "UsuarioEmpresasDto",
      "properties": {
        "Empresa": {
          "type": "integer"
        },
        "Fantasia": {
          "type": "string"
        }
      }
    },
    "UsuarioSuporteDto": {
      "type": "object",
      "description": "UsuarioSuporteDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Ativo": {
          "type": "boolean"
        },
        "Usuario": {
          "type": "string"
        }
      }
    },
    "VendedorMetaDto": {
      "type": "object",
      "description": "VendedorMetaDto",
      "properties": {
        "Contrato": {
          "type": "integer"
        },
        "Empresa": {
          "type": "integer"
        },
        "Vendedor": {
          "type": "integer"
        },
        "MesAno": {
          "type": "string"
        },
        "ValorMeta": {
          "type": "number"
        },
        "NomeVendedor": {
          "type": "string"
        }
      }
    }
  }
}